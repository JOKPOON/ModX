services:
  caddy:
    image: caddy:2.7-alpine
    restart: unless-stopped
    container_name: caddy_proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - caddy_net

  web:
    image: $CI_REGISTRY_IMAGE:main_frontend
    container_name: modxWeb
    expose:
      - 5173
    networks:
      - caddy_net

  server:
    image: $CI_REGISTRY_IMAGE:main_backend
    container_name: modxServer
    expose:
      - 8080
    environment:
      - PORT=8080
      - GIN_MODE=release
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_HOST=$POSTGRES_HOST
      - POSTGRES_PORT=$POSTGRES_PORT
      - GCLOUD_STORAGE_URL=$GCLOUD_STORAGE_URL
      - OMISE_PUBLIC_KEY=${OMISE_PUBLIC_KEY}
      - OMISE_SECRET_KEY=${OMISE_SECRET_KEY}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - caddy_net

  postgres:
    image: postgres:14-alpine
    container_name: postgres
    user: postgres
    ports:
      - 5555:5432
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_DB=$POSTGRES_DB
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - caddy_net

volumes:
  caddy_data:
  caddy_config:
networks:
  caddy_net: