services:
  modx_client:
    image: public.ecr.aws/z4n6o0v4/modx/client:latest
    container_name: modx_client
    expose:
      - 5173
    networks:
      - caddy_net

  modx_server:
    image: public.ecr.aws/z4n6o0v4/modx/server:latest
    container_name: modx_server
    expose:
      - 8080
    environment:
      - PORT=8080
      - GIN_MODE=release
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - OMISE_PUBLIC_KEY=${OMISE_PUBLIC_KEY}
      - OMISE_SECRET_KEY=${OMISE_SECRET_KEY}
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}
      - AWS_S3_URL=${AWS_S3_URL}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - caddy_net

  postgres:
    image: postgres:14-alpine
    container_name: postgres
    user: postgres
    ports:
      - 5555:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - caddy_net

volumes:
  postgres_data:
networks:
  caddy_net:
    external: true
